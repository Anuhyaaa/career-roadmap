
CAREER ROADMAP GENERATOR
Software Requirements Specification Report
Anuhya Valluri
Lovely Professional University | Punjab

Table of Contents

Introduction
1.1 Project Purpose and Goals
1.2 Project Scope
1.3 Product Overview
1.3.1 Core Concept
1.3.2 User Roles
1.3.3 Technology Stack

Features and Functional Requirements
2.1 Feature 1: Guest Roadmap Generation
2.2 Feature 2: User Authentication
2.3 Feature 3: Authenticated Roadmap Management
2.4 Feature 4: PDF Export

User Interface (UI) and Experience (UX)
3.1 Key Screens
3.2 Design and Usability Goals

System Design and Technical Details
4.1 System Architecture
4.2 Data Model
4.3 Security Requirements
4.4 Error Handling

Appendix A: AI Prompt Engineering

Appendix B: Glossary

Conclusion

1. Introduction
1.1 Project Purpose and Goals
This document outlines the plan and requirements for the Career Roadmap Generator, a web application designed for students and professionals navigating their career paths.

The primary goal of this project is to create an intuitive tool that provides users with a personalized, actionable learning plan. By leveraging an AI model, the application will generate a custom roadmap of skills to learn, platforms to use, certifications to earn, and projects to build.

The key objectives are:

To Provide Value: Offer users a clear, structured, and high-quality career plan.

To Be User-Friendly: Design a simple and intuitive interface that is easy for anyone to use.

To Be Actionable: Deliver a roadmap that users can immediately start following.

To Be Technically Sound: Build a reliable and secure application using modern Python practices.

1.2 Project Scope
In Scope:

A "Try Now" feature for guest users to generate a single roadmap without signing up.

User registration and login using an email and password.

The ability for registered users to save their generated roadmaps and view them in a history page.

Generation of a detailed roadmap that includes an ordered skill path, recommended learning platforms, relevant certifications, project ideas (Beginner, Intermediate, Advanced), and a timeline.

An "Export to PDF" function for saving the roadmap offline.

A simple, clean, and responsive web interface that works on both desktop and mobile devices.

Out of Scope:

Advanced administrative dashboards or analytics.

Automated email features like verification or password reset.

Social media login (e.g., "Login with Google").

Complex features like AI response caching or rate limiting.

A dark/light mode theme toggle.

1.3 Product Overview
1.3.1 Core Concept
The Career Roadmap Generator is a standalone web application. A user visits the website, fills out a simple form about their interests and skills, and the application's backend sends this information to an AI model. The AI generates a detailed career plan, which is then parsed, structured, and displayed back to the user in an easy-to-read format.

1.3.2 User Roles
Guest User: An anonymous user who has not created an account. Can generate one roadmap per session to try out the tool. The generated plan is not saved.

Registered User: A user who has signed up with an email and password. Can generate multiple roadmaps, which are automatically saved to their account. Can view a history of all their past roadmaps.

1.3.3 Technology Stack
Backend: Python 3.11+ with Flask (Core application logic and server).

Frontend: HTML, CSS, Vanilla JavaScript (Building the user interface).

Styling: Bootstrap 5 or Tailwind CSS (To make the application look clean and responsive).

Database: PostgreSQL (via Supabase) (Storing user accounts and saved roadmaps).

AI: OpenAI or Google Gemini API (Generating the career roadmap content).

PDF Generation: WeasyPrint or xhtml2pdf (To create the downloadable PDF files).

2. Features and Functional Requirements
2.1 Feature 1: Guest Roadmap Generation
Description: Allows any visitor to try the core feature of the application without needing to sign up.

FR-1: The application will have a web form to collect a user's interests, education level, current skills, and optional career goal.

FR-2: The form will require at least one interest and an education level to be submitted.

FR-3: During the generation process, a loading indicator will be shown to the user.

FR-4: The application will display the generated roadmap in clear sections: Skill Path, Platforms, Certifications, Project Ideas, and Timeline.

FR-5: A disclaimer will be shown on the results page, advising users to verify the AI's suggestions.

FR-6: Roadmaps generated by guests will not be saved in the database.

2.2 Feature 2: User Authentication
Description: Provides standard user account functionality.

FR-7: The system will provide a signup page for new users to create an account with an email and password.

FR-8: User passwords will be securely hashed before being stored in the database.

FR-9: The system will provide a login page for registered users to access their accounts.

FR-10: A logged-in user will have a persistent session until they explicitly log out.

2.3 Feature 3: Authenticated Roadmap Management
Description: Allows registered users to save and revisit their generated roadmaps.

FR-11: When a logged-in user generates a roadmap, it will be automatically saved to their account.

FR-12: A "History" page will be available only to logged-in users.

FR-13: The History page will list all previously saved roadmaps, allowing a user to click and view any of them.

2.4 Feature 4: PDF Export
Description: Allows any user to download a copy of their generated roadmap.

FR-14: An "Export to PDF" button will be available on the results page.

FR-15: Clicking the button will generate and download a PDF file containing all the roadmap information.

3. User Interface (UI) and Experience (UX)
3.1 Key Screens
Home/Input Page: A clean and welcoming page featuring the main form.

Results Page: A well-organized page that presents the generated roadmap.

Signup & Login Pages: Simple, standard forms for user authentication.

History Page: A straightforward list of a user's saved roadmaps.

3.2 Design and Usability Goals
Performance: The roadmap should generate and display in under 15 seconds.

Simplicity: The interface should be intuitive and require no instructions.

Responsiveness: The website must look good and be fully functional on desktops, tablets, and mobile phones.

Accessibility: The design will follow best practices for accessibility.

4. System Design and Technical Details
4.1 System Architecture
The application follows a simple client-server architecture. The client (browser) communicates with the server (Flask application), which handles business logic, database interactions, and AI API calls.

Workflow:

User interacts with the Frontend (Web Browser).

Frontend sends user input via an HTTPS request to the Backend (Flask Server).

Backend validates input, constructs a prompt, and sends it to the AI API.

AI API returns the generated roadmap.

If the user is logged in, the Backend saves the data to the Supabase Database.

Backend renders an HTML page with the roadmap and sends it to the Frontend.

4.2 Data Model
The database will use three main tables:

users: Stores user authentication details (id, email, password_hash).

roadmap_requests: Acts as a log of all inputs, linked to a user (or null for guests).

roadmaps: Stores the structured AI-generated output (skill_path, platforms, etc.) linked to a request.

4.3 Security Requirements
API Keys: Kept secret on the server.

Passwords: Hashed using bcrypt.

Data Transmission: Use HTTPS.

Input Sanitization: Clean user-submitted data to prevent attacks like XSS.

4.4 Error Handling
Invalid Form Input: Show an error message next to the specific field.

AI Service Failure: Display a user-friendly message and provide a "Retry" button.

Unexpected Crash: Show a generic error page and log technical details.

5. Appendix A: AI Prompt Engineering
The system sends a two-part prompt to the AI.

Part 1: The System Instruction
You are an expert career mentor. Given a learner profile, produce a structured JSON object EXACTLY matching the specified schema. Return ONLY the JSON object.

Part 2: The User Data
Learner Profile:

Name (optional): {name}

Interests: {interests}

Education: {education}

Current Skills: {skills}

Career Goal: {goal}
Constraints: Focus on practical, widely-used technologies and credible platforms. Assume the learner can study 10 hours per week.

6. Appendix B: Glossary
Roadmap: A structured plan of skills, resources, and timelines for career development.

LLM: Large Language Model. The AI technology used for content generation.

Persistence: The act of saving data to a long-term storage system like a database.

API: Application Programming Interface. A way for different software components to communicate.

Backend: The part of the application that runs on the server.

Frontend: The part of the application that runs in the user's web browser.

JSON: JavaScript Object Notation. A lightweight, text-based format for structuring data.

7. Conclusion
This document details the goals, scope, features, and technical design for the Career Roadmap Generator, establishing a clear foundation for development. Following this plan will guide the team in delivering a high-quality application that meets all specified objectives.

